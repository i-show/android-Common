buildscript {
    apply from: 'config.gradle'

    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    dependencies {
        //  Android 默认的编译工具库插件
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin.sdk"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    // Javadoc设定为UTF-8了
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task aaASit(type: Exec) {
    commandLine 'sh', '-c', 'python3 utils/pgy.py build sit'
    executable "sh"
}


/**
 * 生成版本的时间
 */
static def releaseTime() {
    return new Date().format("yyyy_MMdd")
}

/**
 * 生成VersionCode
 */
@SuppressWarnings("unused")
static def generateVersionCode() {
    return new Date().format("yyyyMMdd")
}

/**
 *  重命名Apk的方法
 */
@SuppressWarnings(["GrMethodMayBeStatic", "unused"])
def renameAPK(android, variant, output) {
    def flavor = variant.productFlavors[0]
    def flavorName
    def versionName

    if (flavor == null) {
        flavorName = ""
        versionName = android.defaultConfig.versionName
    } else {
        versionName = flavor.versionName
        flavorName = flavor.name
    }

    if (versionName == null || versionName.toString() == "null") {
        versionName = variant.versionName
    }

    if (versionName == null || versionName.toString() == "null") {
        versionName = ""
    }

    def versionNameSuffix = variant.buildType.versionNameSuffix
    if (versionNameSuffix.toString() == "null") {
        versionNameSuffix = ""
    }

    def buildTypeName = variant.buildType.name

    if (buildTypeName == "debug") {
        buildTypeName = "dev"
    } else if (buildTypeName == "release") {
        buildTypeName = "prod"
    }

    if (flavorName == "" || flavorName == "null") {
        output.outputFileName = "${APK_PREFIX}_${buildTypeName}_v${versionName}${versionNameSuffix}_${releaseTime()}.apk"
    } else {
        output.outputFileName = "${APK_PREFIX}_${buildTypeName}_${flavorName}_v${versionName}${versionNameSuffix}_${releaseTime()}.apk"
    }
}
